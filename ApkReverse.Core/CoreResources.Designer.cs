//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApkReverse.Core {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CoreResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CoreResources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ApkReverse.Core.CoreResources", typeof(CoreResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Base header: Type {0}, HeaderSize {1}, Size {2}.
        /// </summary>
        internal static string BaseHeaderDebug {
            get {
                return ResourceManager.GetString("BaseHeaderDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resources parse error: unexpected chunk header size &apos;{0}, expecting {1}.
        /// </summary>
        internal static string ChunkHeaderSizeError {
            get {
                return ResourceManager.GetString("ChunkHeaderSizeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resources parse error: unexpected chunk type &apos;{0}&apos;, expecting &apos;{1}&apos; at offset {2}.
        /// </summary>
        internal static string ChunkTypeError {
            get {
                return ResourceManager.GetString("ChunkTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   String pool header: {0}; Flags {1}, StringsCount {2}, StringsStart {3}, StyleCount {4}, StyleStart {5}.
        /// </summary>
        internal static string StringPoolDebug {
            get {
                return ResourceManager.GetString("StringPoolDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resources parse error: unexpected flag value: {0}, expecting &apos;{1}&apos;, &apos;{2}&apos;.
        /// </summary>
        internal static string StringPoolFlagsError {
            get {
                return ResourceManager.GetString("StringPoolFlagsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   String pool not contains {0} index.
        /// </summary>
        internal static string StringPoolIndexError {
            get {
                return ResourceManager.GetString("StringPoolIndexError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   StringPool BaseOffset:{0}, Size:{1}, StringsCount: {2}, StylesCount:{3}, Flags:{4}.
        /// </summary>
        internal static string StringPoolReaderDebug {
            get {
                return ResourceManager.GetString("StringPoolReaderDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resources parse error: unexpected {0}, expecting &apos;NULL&apos; at offset {1}.
        /// </summary>
        internal static string StringTerminatorError {
            get {
                return ResourceManager.GetString("StringTerminatorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   TableHeader: {0}; PackagesCount {1}.
        /// </summary>
        internal static string TableHeaderDebug {
            get {
                return ResourceManager.GetString("TableHeaderDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resources parse error:  unknown chunk type {0} at offset {1}.
        /// </summary>
        internal static string UnknownChunkTypeError {
            get {
                return ResourceManager.GetString("UnknownChunkTypeError", resourceCulture);
            }
        }
    }
}
